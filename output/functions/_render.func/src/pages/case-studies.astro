---
import Layout from '../layouts/Layout.astro';
import Container from "../components/Container.astro";
import Topic from "../components/Topic.astro";
import { caseStudies } from '../data/caseStudies';

// Extract unique categories from case studies
const categories = ['All', ...new Set(caseStudies.map(study => study.category))];
---

<Layout title="Case Studies | MustMedia">
    <div class="bg-[#0B0F19] text-white min-h-screen">
        <Container>
            <div class="py-24">
                <Topic 
                    title="Nos Réalisations" 
                    description="Découvrez comment nous aidons nos clients à atteindre leurs objectifs"
                />

                <!-- Filter Section -->
                <div class="flex flex-wrap justify-center gap-4 mt-12 mb-16">
                    {categories.map(category => (
                        <button 
                            class="filter-btn px-6 py-2 rounded-full border-2 border-zinc-700 text-zinc-300 hover:border-zime-44 hover:bg-zime-44 hover:text-white transition-all"
                            data-filter={category}
                            data-active={category === 'All' ? 'true' : 'false'}
                        >
                            {category}
                        </button>
                    ))}
                </div>

                <!-- Case Studies Grid -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    {caseStudies.map(study => (
                        <div 
                            class="case-study-item bg-[#1A1F2E] rounded-3xl border border-zinc-700 shadow-xl overflow-hidden hover:border-zime-44 transition-all duration-300" 
                            data-category={study.category}
                            data-visible="true"
                        >
                            <div class="p-8 space-y-6">
                                <span class="inline-block px-4 py-1 bg-zime-44 text-white rounded-full text-sm">
                                    {study.category}
                                </span>
                                
                                <h3 class="text-2xl font-semibold text-white">{study.title}</h3>
                                
                                <p class="text-zinc-400">{study.description}</p>
                                
                                <!-- Metrics with Trend Indicators -->
                                <div class="grid grid-cols-3 gap-4">
                                    {study.metrics.map(metric => (
                                        <div class="text-center">
                                            <div class="flex items-center justify-center gap-1">
                                                <div class="text-2xl font-bold text-zime-44">{metric.value}</div>
                                                {metric.trend === 'up' && (
                                                    <svg class="w-4 h-4 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"/>
                                                    </svg>
                                                )}
                                                {metric.trend === 'down' && (
                                                    <svg class="w-4 h-4 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
                                                    </svg>
                                                )}
                                            </div>
                                            <div class="text-sm text-zinc-500">{metric.label}</div>
                                        </div>
                                    ))}
                                </div>

                                <div class="pt-4 border-t border-zinc-700">
                                    <a 
                                        href={`/case-studies/${study.id}`} 
                                        class="group inline-flex items-center gap-3 text-zime-44 hover:text-white transition-colors duration-300"
                                    >
                                        <span class="text-lg font-medium">En savoir plus</span>
                                        <svg 
                                            class="w-5 h-5 transform transition-transform duration-300 group-hover:translate-x-2" 
                                            fill="none" 
                                            stroke="currentColor" 
                                            viewBox="0 0 24 24"
                                        >
                                            <path 
                                                stroke-linecap="round" 
                                                stroke-linejoin="round" 
                                                stroke-width="2" 
                                                d="M17 8l4 4m0 0l-4 4m4-4H3"
                                            />
                                        </svg>
                                    </a>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </Container>
    </div>
</Layout>

<script>
    function initializeFilters() {
        const filterButtons = document.querySelectorAll<HTMLButtonElement>('.filter-btn');
        const caseStudyItems = document.querySelectorAll<HTMLElement>('.case-study-item');

        // Set initial state
        const activeFilter = localStorage.getItem('activeFilter') || 'All';
        filterButtons.forEach(btn => {
            if (btn.getAttribute('data-filter') === activeFilter) {
                btn.classList.add('active');
                btn.setAttribute('data-active', 'true');
            }
        });

        // Apply initial filtering
        filterItems(activeFilter);

        // Add click handlers
        filterButtons.forEach(button => {
            button.addEventListener('click', () => {
                const selectedCategory = button.getAttribute('data-filter') || 'All';
                
                // Update localStorage
                localStorage.setItem('activeFilter', selectedCategory);

                // Update UI
                filterButtons.forEach(btn => {
                    btn.classList.remove('active');
                    btn.setAttribute('data-active', 'false');
                });
                button.classList.add('active');
                button.setAttribute('data-active', 'true');

                filterItems(selectedCategory);
            });
        });

        function filterItems(category: string) {
            caseStudyItems.forEach(item => {
                const itemCategory = item.getAttribute('data-category');
                if (category === 'All' || category === itemCategory) {
                    item.style.display = 'block';
                    item.setAttribute('data-visible', 'true');
                } else {
                    item.style.display = 'none';
                    item.setAttribute('data-visible', 'false');
                }
            });
        }
    }

    // Initialize on page load
    initializeFilters();

    // Re-initialize when navigating back
    document.addEventListener('astro:after-swap', initializeFilters);
</script>

<style>
    .filter-btn.active {
        @apply bg-zime-44 text-white border-zime-44;
    }
    
    .filter-btn[data-active="true"] {
        @apply bg-zime-44 text-white border-zime-44;
    }
    
    .case-study-item[data-visible="false"] {
        display: none;
    }

    .case-study-item {
        opacity: 0;
        animation: fadeIn 0.5s ease-out forwards;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style> 